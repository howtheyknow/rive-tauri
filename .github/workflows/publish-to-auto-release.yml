name: "publish"

on:
  push:
    branches:
      - release

# This is the example from the readme.
# On each push to the `release` branch it will create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use

      - name: "Create env file"
        run: |
          touch .env.local
          echo NEXT_PUBLIC_TMDB_API=${{ secrets.NEXT_PUBLIC_TMDB_API }} >> .env.local
          echo NEXT_PUBLIC_TMDB_API_KEY=${{ secrets.NEXT_PUBLIC_TMDB_API_KEY }} >> .env.local
          echo NEXT_PUBLIC_TMBD_IMAGE_URL=${{ secrets.NEXT_PUBLIC_TMBD_IMAGE_URL }} >> .env.local
          echo NEXT_PUBLIC_PROVIDER_URL=${{ secrets.NEXT_PUBLIC_PROVIDER_URL }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_AGG=${{ secrets.NEXT_PUBLIC_STREAM_URL_AGG }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_MULTI=${{ secrets.NEXT_PUBLIC_STREAM_URL_MULTI }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_SUP=${{ secrets.NEXT_PUBLIC_STREAM_URL_SUP }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_VID=${{ secrets.NEXT_PUBLIC_STREAM_URL_VID }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_PRO=${{ secrets.NEXT_PUBLIC_STREAM_URL_PRO }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_EMB=${{ secrets.NEXT_PUBLIC_STREAM_URL_EMB }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_CLUB=${{ secrets.NEXT_PUBLIC_STREAM_URL_CLUB }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_SMASH=${{ secrets.NEXT_PUBLIC_STREAM_URL_SMASH }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_ONE=${{ secrets.NEXT_PUBLIC_STREAM_URL_ONE }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_ANY=${{ secrets.NEXT_PUBLIC_STREAM_URL_ANY }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_PRIME=${{ secrets.NEXT_PUBLIC_STREAM_URL_PRIME }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_RGS=${{ secrets.NEXT_PUBLIC_STREAM_URL_RGS }} >> .env.local
          echo NEXT_PUBLIC_STREAM_URL_WEB=${{ secrets.NEXT_PUBLIC_STREAM_URL_WEB }} >> .env.local
          echo NEXT_PUBLIC_FB_API_KEY=${{ secrets.NEXT_PUBLIC_FB_API_KEY }} >> .env.local
          echo NEXT_PUBLIC_FB_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FB_AUTH_DOMAIN }} >> .env.local
          echo NEXT_PUBLIC_FB_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FB_PROJECT_ID }} >> .env.local
          echo NEXT_PUBLIC_FB_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FB_STORAGE_BUCKET }} >> .env.local
          echo NEXT_PUBLIC_FB_SENDER_ID=${{ secrets.NEXT_PUBLIC_FB_SENDER_ID }} >> .env.local
          echo NEXT_PUBLIC_FB_APP_ID=${{ secrets.NEXT_PUBLIC_FB_APP_ID }} >> .env.local
          echo NEXT_PUBLIC_FB_MEASUREMENT_ID=${{ secrets.NEXT_PUBLIC_FB_MEASUREMENT_ID }} >> .env.local
          cat .env.local

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: rive-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Rive v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
